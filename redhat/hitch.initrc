#! /bin/sh

### BEGIN INIT INFO
# Provides:          hitch
# Required-Start:    $local_fs $remote_fs $network
# Required-Stop:     $local_fs $remote_fs $network
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: The Scalable TLS Unwrapping Daemon
# Description:       The Scalable TLS Unwrapping Daemon
### END INIT INFO

# Source function library
. /etc/rc.d/init.d/functions

NAME=hitch
CONF=/usr/local/etc/hitch.conf
DESC="hitch"
PATH=/usr/local/sbin:/sbin:/bin:/usr/sbin:/usr/bin
DAEMON=/usr/local/sbin/hitch
PIDFILE=/var/run/hitch/$NAME.pid
USER=nobody

START=True

test -x $DAEMON || exit 0

# Include hitch defaults
[ -e /etc/sysconfig/hitch ] && . /etc/sysconfig/hitch

# Ensure we have a PATH
export PATH="${PATH:+$PATH:}/usr/sbin:/usr/bin:/sbin:/bin"

start_hitch() {
    echo  "Starting $DESC" "$NAME"
    if [ ! -z "$USER" ] ; then
        HITCH_OPTIONS="${HITCH_OPTIONS} --user ${USER}"
    fi
    #output=$(/bin/tempfile -s.hitch)
    mkdir -p `dirname $PIDFILE`
    chown ${USER} `dirname $PIDFILE`
    if daemon --pidfile=${PIDFILE} ${DAEMON} --daemon --pidfile=${PIDFILE} ${HITCH_OPTIONS} 2>&1; then
    #if daemon ${DAEMON} -- --pidfile=${PIDFILE} ${HITCH_OPTIONS} > ${output} 2>&1; then
        return 0
    else
        #cat $output
        return 1
    fi
    #rm $output
}

disabled_hitch() {
    echo  "Not starting $DESC" "$NAME"
    echo "disabled in /etc/default/hitch"
    return 0
}

stop_hitch() {
    echo "Stopping $DESC" "$NAME"
    if killproc -p $PIDFILE $DAEMON; then
        return 0
    else
        return 1
    fi
}

status_hitch() {
    status -p "${PIDFILE}" "${DAEMON}" "${NAME}"
    exit $?
}

reload_hitch() {
    killproc -p "${PIDFILE}" "${DAEMON}" -HUP
    return $?
}

case "$1" in
    start)
        case "${START:-}" in
            [Yy]es|[Yy]|1|[Tt]|[Tt]rue)
                start_hitch
                RETVAL=$?
                ;;
            *)
                disabled_hitch
                RETVAL=$?
                ;;
        esac
        echo
        ;;
    stop)
        stop_hitch
        RETVAL=$?
        ;;
    status)
        status_hitch
        RETVAL=$?
        ;;
    reload)
        reload_hitch
        RETVAL=$?
        ;;
    restart|force-reload)
        $0 stop
        $0 start
        ;;
    *)
        echo "Usage: $0 {start|stop|status|reload|restart|force-reload}"
        exit 1
        ;;
esac

exit $RETVAL
